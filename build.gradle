plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'groovy'
}

group = 'com.laphayen'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// handlebars
	implementation 'org.springframework.boot:spring-boot-starter-mustache' // Handlebars를 Mustache 템플릿 엔진으로 사용 가능
	implementation 'com.github.jknack:handlebars:4.3.0' // Handlebars 라이브러리


	// spock
	testImplementation 'org.apache.groovy:groovy:4.0.18'
	testImplementation 'org.spockframework:spock-core:2.4-M1-groovy-4.0'
	testImplementation 'org.spockframework:spock-spring:2.4-M1-groovy-4.0'

	// spock mock
	testImplementation('net.bytebuddy:byte-buddy:1.12.10')

	// testcontainers
	testImplementation 'org.testcontainers:spock:1.19.8'
	testImplementation 'org.testcontainers:mariadb:1.19.8'

	// spring retry
	implementation 'org.springframework.retry:spring-retry'

	// mockWebServer
	testImplementation('com.squareup.okhttp3:okhttp:4.10.0')
	testImplementation('com.squareup.okhttp3:mockwebserver:4.10.0')

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// https://github.com/seruco/base62
	implementation 'io.seruco.encoding:base62:0.1.3'

}

tasks.named('test') {
	useJUnitPlatform()
}

bootJar{
	archiveFileName = 'app.jar'
}

// $ ./gradlew clean build -PKAKAO_REST_API_KEY={api key 값} 명령어로 전체 테스트 및 빌드하여 jar 파일 생성
processTestResources {
	boolean hasProperty = project.hasProperty("KAKAO_REST_API_KEY")
	System.out.println("Set kakao rest api key: $hasProperty")
	filesMatching('**/application.yml') {
		expand(project.properties)
	}
}